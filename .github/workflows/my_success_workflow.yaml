name: My success workflow
on: 
    push:
        tags: 
          - v[0-9].[0-9]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:    
        - 
            name: Checkout
            uses: actions/checkout@v4
        -
            name: Check commit message
            run: |
                nowmessage=$(git log -1 --pretty=%B)
                if [[ $nowmessage == "#NORUN"* ]]; then
                    exit 1
                fi

    #Scan the code base for vulnerabilities
        -
            name: Checkout code
            uses: actions/checkout@v3
        -
            name: Run Trivy vulnerability scanner in repo mode
            uses: aquasecurity/trivy-action@master
            with:
              scan-type: 'fs'
              ignore-unfixed: true
              format: 'table'
              output: 'trivy-results.txt'
              severity: 'CRITICAL'
        -
            name: see the table
            run:
                cat trivy-results.txt
#Containerized the Golang application
#Push the image to Docker Hub
        -
            name: Checkout
            uses: actions/checkout@v3
        -
            name: Set up QEMU
            uses: docker/setup-qemu-action@v3
        -
            name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
        -
            name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
            name: Build and push
            uses: docker/build-push-action@v5
            with:
              context: .
              push: true
              tags: user1051006/mydoc:${{github.sha}}
#注意在本地做：context: .
#Digitally sign the image
        -
            uses: actions/checkout@v3.5.2
            with:
              fetch-depth: 1
        - 
            name: Install Cosign
            uses: sigstore/cosign-installer@v3.1.1
            with:
              cosign-release: 'v2.2.0'
        - 
            name: Sign image with a key
            run: |
              cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}"
            env:
              TAGS: user1051006/mydoc:${{github.sha}}
              COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
              COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}